<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>numpy中reshap函数参数为-1的情况分析</title>
    <url>/2020/05/08/2022-05-09-numpy%E4%B8%ADreshap%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E4%B8%BA-1%E7%9A%84%E6%83%85%E5%86%B5%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<p>最近学机器学习的时候，看到这样一段代码：<code>x.reshape(-1,1)</code>，一直搞不懂参数-1是什么意思。最后就去看了看官方文档：</p>
<span id="more"></span>


<center>
<img src="https://img-blog.csdnimg.cn/20201027105911442.png?watmark/2/text/aHR0cDovL2cuY3Nkbi5uZXQvV5bm1hbjIzMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="60%">

<p>我们主要看一下红框框里面的内容：</p>
<blockquote>
<p>The new shape should be compatible with the original shape. If an integer, then the result will be a 1-D array of that length. One shape dimension can be -1. In this case, the value is inferred from the length of the array and remaining dimensions.</p>
</blockquote>
<p>翻译：</p>
<p>新形状应与原形状兼容。如果是整数，那么结果将是该长度的1-D数组。一个形状维数可以是-1，该值是从数组的长度和其余维数推断出来的。</p>
<p>人话：</p>
<p>这里我们用一个例子来说明，假如一个数组的shape是<code>(3,4)</code>，这里<code>3*4=12</code>，对这个数组进行<code>reshape</code>操作后，新数组的<code>shape</code>中各维度的乘积也应为12。如果其中一个参数是-1，另一个参数是2，也就是<code>(-1,2)</code>，那么这个新数组的shape就是<code>(12/2,2)</code>，即<code>(6,2)</code>；如果另一个参数是1，那么这个新数组的shape就是<code>(12/1,1)</code>，即<code>(12,1)</code>.</p>
<p>更多的情况用下面的代码实现：</p>
<p><img src="https://img-blog.csdnimg.cn/2020102711161051.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTQ3NjUwMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>numpy</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python爬取糗事百科段子并发送到邮箱</title>
    <url>/2020/05/08/2022-05-09-python%E7%88%AC%E5%8F%96%E7%B3%97%E4%BA%8B%E7%99%BE%E7%A7%91%E6%AE%B5%E5%AD%90%E5%B9%B6%E5%8F%91%E9%80%81%E5%88%B0%E9%82%AE%E7%AE%B1/</url>
    <content><![CDATA[<p>代码如下：</p>
<span id="more"></span>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"><span class="keyword">from</span> email.utils <span class="keyword">import</span> formataddr</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">r = requests.get(<span class="string">&#x27;https://www.qiushibaike.com/text/page/1/&#x27;</span>)</span><br><span class="line">soup = BeautifulSoup(r.content,<span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"></span><br><span class="line">contentUrl = soup.find(<span class="string">&#x27;div&#x27;</span>,class_=<span class="string">&#x27;col1 old-style-col1&#x27;</span>).find(<span class="string">&#x27;div&#x27;</span>,class_=<span class="string">&quot;article block untagged mb15 typs_long&quot;</span>).find(<span class="string">&#x27;a&#x27;</span>,class_=<span class="string">&quot;contentHerf&quot;</span>).get(<span class="string">&#x27;href&#x27;</span>)</span><br><span class="line"></span><br><span class="line">textUrl = <span class="string">&#x27;https://www.qiushibaike.com&#x27;</span> + contentUrl</span><br><span class="line"></span><br><span class="line">textR = requests.get(textUrl)</span><br><span class="line">textSoup = BeautifulSoup(textR.content, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">text = textSoup.find(<span class="string">&#x27;div&#x27;</span>,class_=<span class="string">&quot;content&quot;</span>).text</span><br><span class="line"></span><br><span class="line">my_sender=<span class="string">&#x27;*********@qq.com&#x27;</span>  <span class="comment"># 发件人邮箱账号</span></span><br><span class="line">my_pass = <span class="string">&#x27;werprgqmxaadbasd&#x27;</span>   <span class="comment"># 发件人邮箱授权码</span></span><br><span class="line">my_user=<span class="string">&#x27;*********@163.com&#x27;</span>   <span class="comment"># 收件人邮箱</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mail</span>():</span><br><span class="line">  ret=<span class="literal">True</span></span><br><span class="line">  <span class="keyword">try</span>:</span><br><span class="line">    msg=MIMEText(text,<span class="string">&#x27;plain&#x27;</span>,<span class="string">&#x27;utf-8&#x27;</span>) <span class="comment">#填写邮件内容</span></span><br><span class="line">    msg[<span class="string">&#x27;From&#x27;</span>]=formataddr([<span class="string">&quot;发件人昵称&quot;</span>,my_sender]) <span class="comment"># 括号里的对应发件人邮箱昵称、发件人邮箱账号</span></span><br><span class="line">    msg[<span class="string">&#x27;To&#x27;</span>]=formataddr([<span class="string">&quot;收件人昵称&quot;</span>,my_user])       <span class="comment"># 括号里的对应收件人邮箱昵称、收件人邮箱账号</span></span><br><span class="line">    msg[<span class="string">&#x27;Subject&#x27;</span>]=<span class="string">&quot;每日笑话&quot;</span>        <span class="comment"># 邮件的主题，也可以说是标题</span></span><br><span class="line"> </span><br><span class="line">    server=smtplib.SMTP_SSL(<span class="string">&quot;smtp.qq.com&quot;</span>, <span class="number">465</span>) <span class="comment"># 发件人邮箱中的SMTP服务器，端口是25</span></span><br><span class="line">    server.login(my_sender, my_pass) <span class="comment"># 括号中对应的是发件人邮箱账号、邮箱密码</span></span><br><span class="line">    server.sendmail(my_sender,[my_user,],msg.as_string()) <span class="comment"># 括号中对应的是发件人邮箱账号、收件人邮箱账号、发送邮件</span></span><br><span class="line">    server.quit() <span class="comment"># 关闭连接</span></span><br><span class="line">  <span class="keyword">except</span> Exception: <span class="comment"># 如果 try 中的语句没有执行，则会执行下面的 ret=False</span></span><br><span class="line">    ret=<span class="literal">False</span></span><br><span class="line">  <span class="keyword">return</span> ret</span><br><span class="line">ret=mail()</span><br><span class="line"><span class="keyword">if</span> ret:</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;邮件发送成功&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;邮件发送失败&quot;</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/05/11/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>hexo + github + butterfly 搭建你的个人博客保姆级教程（无需云服务器）</title>
    <url>/2022/05/10/hexo%20+%20github%20+%20butterfly%20%E6%90%AD%E5%BB%BA%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%BF%9D%E5%A7%86%E7%BA%A7%E6%95%99%E7%A8%8B%EF%BC%88%E6%97%A0%E9%9C%80%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89/</url>
    <content><![CDATA[<p><strong>注意：此安装教程在Windows10 64位下进行</strong></p>
<span id="more"></span>

<h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>打开 <a href="http://nodejs.cn/">Node.js官网</a>，选择长期支持版本的安装包下载<br><img src="https://img-blog.csdnimg.cn/5f70c7076b2b46e4a449463922cb4b2a.png" alt="请添加图片描述"></p>
<p>这里我下载.msi文件，由于我的计算机是64位的，所以我选择了<code>64位</code><br><img src="https://img-blog.csdnimg.cn/d618c79c05184bdaaa0403bdc5159655.png" alt="请添加图片描述"><br>双击安装<br><img src="https://img-blog.csdnimg.cn/b6b8ac332f0c45e6a638e61c48552bb4.png" alt="请添加图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/9d718ff6b5a34ca2b86acae8b5c1c88a.png" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/34f2312da2a848ca91156b01472729fb.png" alt="请添加图片描述"></p>
<p>这里我装在了D盘<br><img src="https://img-blog.csdnimg.cn/585f1a7ed65b4581b0024d1841d4b277.png" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/19bb623e624d42a29992e2f0f511e706.png" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/530826f3063b43f7afc2525d7e1603fc.png" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/7a83557b2fb0462881a24f92a2fab59d.png" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/00e51d8b049c47df966bc0d7913e010b.png" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/94c7545976234b06b9bca708dbfab303.png" alt="请添加图片描述"><br>安装完成后会出现一个命令行窗口，不用管，退出就好<br><img src="https://img-blog.csdnimg.cn/4130b47c746149adb8ee21f7847b1746.png" alt="请添加图片描述"><br><code>Win+R</code>打开命令行窗口，依次输入<code>node -v</code>、<code>npm - v</code>，如果出现版本号，则说明安装成功</p>
<p><img src="https://img-blog.csdnimg.cn/9ec553d958b74d409856dddb280156a1.png" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/c3c4740dff3d4d20b42dd367e9b715b6.png" alt="请添加图片描述"></p>
<h2 id="安装-git"><a href="#安装-git" class="headerlink" title="安装 git"></a>安装 git</h2><p>打开 <a href="https://git-scm.com/">git官网</a>，点击下图中的位置转到下载页面</p>
<p><img src="https://img-blog.csdnimg.cn/dba8ed0e6d4d42d98dd2716bbd542e69.png" alt="请添加图片描述"><br>根据系统类型下载，我是Windows系统</p>
<p><img src="https://img-blog.csdnimg.cn/1e57d38cbd55450898f52b5caaa18a9a.png" alt="请添加图片描述"><br>我下载了64位<br><img src="https://img-blog.csdnimg.cn/f51cc6984d974e18bf2631274181e504.png" alt="请添加图片描述"><br>双击安装</p>
<p><img src="https://img-blog.csdnimg.cn/bc88794807db44e69216e4bded6debd3.png" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/65be9640321c41ff82bf63026e8f9ac1.png" alt="请添加图片描述"><br>这里我安装在了D盘<br><img src="https://img-blog.csdnimg.cn/b2e07638229245f5a9c1a691b5a37a7e.png" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/b1b8969479c445738c3c32c6e94abb3f.png" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/2e35f27ceec3423b90a280540f29cb9d.png" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/b614b52189d74bcb8b1b0fc7480bb5a0.png" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/ad85726229614922b626e22b1fb8ab37.png" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/e1bc066a546e4f668b6b68d31aedfdb2.png" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/b63357e454054e77a929348349f4c545.png" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/2d75719775344329885d454256e2eae2.png" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/a6773894815443a9942f21e965804a1c.png" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/01ff4cb753f642cca3f33a853881e91c.png" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/f90171668224482491dd4885606ad6d9.png" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/65183544433542d990b1db6ee0653fec.png" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/588a10188ba947deb226405d03b01641.png" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/b226be766f0e4da5994a034d3b9c2b22.png" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/7fbbbe1cefa1451cadce53339801db37.png" alt="请添加图片描述"><br>取消勾选 <code>View Release Notes</code></p>
<p><img src="https://img-blog.csdnimg.cn/0fd698efe8f94f97970e19f5fdef95e3.png" alt="请添加图片描述"><br><code>WIn + R</code>打开命令行，输入<code>git --version</code>，如果出现系统版本则说明git安装成功<br><img src="https://img-blog.csdnimg.cn/ce69178d5f3247a9a8e753cb181ed4fc.png" alt="请添加图片描述"></p>
<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>在命令行窗口输入以下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmp install hexo-cli -g</span><br></pre></td></tr></table></figure>
<p>如果报错就多试几次，可能因为网络问题。<br><img src="https://img-blog.csdnimg.cn/8a04a666f8ca4f11a6c4740cd88f3802.png" alt="请添加图片描述"></p>
<h2 id="创建个人博客"><a href="#创建个人博客" class="headerlink" title="创建个人博客"></a>创建个人博客</h2><p>首先，在电脑的任意位置创建一个文件夹，这里我再<code>F盘</code>创建了名为<code>blog</code>的文件夹（也可以是其他名字），进入这个文件夹<br><img src="https://img-blog.csdnimg.cn/be0fa3e5768540e4b1a8e3e6e6fc2fbf.png" alt="请添加图片描述"><br>在空白处右键，点击<code>Git Bash Here</code><br><img src="https://img-blog.csdnimg.cn/e2549627c12547f4ae8fe285cbe8c7cf.png" alt="请添加图片描述"><br>这时候会出现一个窗口，<strong>后面的所有命令都在这个窗口里进行</strong>。</p>
<p><img src="https://img-blog.csdnimg.cn/4ca157d9d5c74f9185cfa6fbd5f6fd4e.png" alt="请添加图片描述"><br>输入<code>hexo init</code> 初始化博客</p>
<p><img src="https://img-blog.csdnimg.cn/d60ab6121e9f4ecebfff0f0e13697704.png" alt="请添加图片描述"><br>这时会看到，<code>blog</code>文件夹下出现了一堆文件<br><img src="https://img-blog.csdnimg.cn/315df126a8574792b78be8a711f54501.png" alt="请添加图片描述"><br>输入<code>hexo g</code>生成静态文件</p>
<p><img src="https://img-blog.csdnimg.cn/87f0e69a04034e3b8cfc5fb1f2493e9c.png" alt="请添加图片描述"><br>输入<code>hexo s</code>部署到本地，红框框里是地址<br><img src="https://img-blog.csdnimg.cn/7a78de04fd0344529fa6d4fe019973d7.png" alt="请添加图片描述"><br>在浏览器中输入上面的地址，可以看到Hexo博客已经在本地部署成功<br><img src="https://img-blog.csdnimg.cn/0e1296081ef84c0cb2cebc3ffe85600f.png" alt="请添加图片描述"><br>在git命令窗口下按<code>Ctrl+C</code>可退出本地部署。</p>
<h2 id="更换butterfly主题"><a href="#更换butterfly主题" class="headerlink" title="更换butterfly主题"></a>更换butterfly主题</h2><p>本文用的是butterfly主题</p>
<p>首先，输入如下命令安装依赖：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/5094eabd356640388980d1105e8651e0.png" alt="请添加图片描述"><br>输入如下命令下载butterfly主题：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/30ec9b15fea043efb02cc7cfa2dc9c69.png" alt="请添加图片描述"><br>这时候，<code>blog/themes</code>目录下会出现一个<code>butterfly</code>文件夹，说明主题下载成功<br><img src="https://img-blog.csdnimg.cn/73cc138b8eb540dd84d6dcbeb1de8256.png" alt="请添加图片描述"><br>打开<code>blog</code>目录下的<code>_config.yml</code>配置文件<br><img src="https://img-blog.csdnimg.cn/893a7f48bb914ee182eda38cbbb5e25b.png" alt="请添加图片描述"><br>更改主题为<code>butterfly</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/749081823f2b4afaba5563f5bca39ba6.png" alt="请添加图片描述"><br>下面我们在本地查看一下效果。</p>
<p>输入以下命令清除缓存：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/c07543619eec4fb2b8c91184c4d94d8f.png" alt="请添加图片描述"><br>生成静态文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/c6c43858cd4d4ccc991ef17a5647ea58.png" alt="请添加图片描述"><br>部署到本地</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/a2d53693b0c245609fd8da4d41862ed1.png" alt="请添加图片描述"><br>下图可以看到，主题已经更换成功<br><img src="https://img-blog.csdnimg.cn/df5c2ee9fbf94ea1aaaa0d6ae10bf3e7.png" alt="请添加图片描述"></p>
<h2 id="部署到-github"><a href="#部署到-github" class="headerlink" title="部署到 github"></a>部署到 github</h2><p>首先输入下面的命令安装插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/85e5ff29599646a9a71a71ef7ec82999.png" alt="请添加图片描述"><br>打开自己的 github 主页，没有账号的可以去注册一下。</p>
<p>新建一个仓库<br><img src="https://img-blog.csdnimg.cn/3d1b369cdb2e4f4b85a389e776ed6a7d.png" alt="请添加图片描述"><br>输入仓库名，<strong>这里要特别注意，仓库名一定要按照以下格式：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">你的github用户名.github.io</span><br></pre></td></tr></table></figure>
<p>然后点击创建仓库即可<br><img src="https://img-blog.csdnimg.cn/faea98e097f44be9a08ceb64b9ccc61e.png" alt="请添加图片描述"><br>创建完之后，会自动进入下面的页面。复制下图中的地址<br><img src="https://img-blog.csdnimg.cn/3eb2a9f2cd3c4c63b4be821b05dd9ddb.png" alt="请添加图片描述"><br>打开本地博客的配置文件<code>_config.yml</code>，在<code>deploy</code>下输入以下内容：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&#x27;git&#x27;</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">你刚刚复制的地址</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/9563aa4debcb4c8086c47890ea5d653b.png" alt="请添加图片描述"><br>在git命令行窗口依次输入以下命令，部署到GitHub</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<p>在浏览器中输入<code>你的GitHub用户名.github.io</code>即可看到刚刚部署的博客，如果没有看到也不要着急，github有一定的延迟，多刷新几次就好<br><img src="https://img-blog.csdnimg.cn/b628a199b855413889902041a8d9974a.png" alt="请添加图片描述"></p>
<h2 id="写一篇博客"><a href="#写一篇博客" class="headerlink" title="写一篇博客"></a>写一篇博客</h2><p>可以看到，可以看到，刚刚部署的博客网站中只有一篇初始文章，下面介绍一下怎么写自己的博客<br><img src="https://img-blog.csdnimg.cn/6b70d6c2fa2e4d01b0bb94981cfd6f7c.png#pic_center" alt="在这里插入图片描述"></p>
<p>首先，还是在git命令行窗口中，输入以下命令创建一篇博客，命名为<code>demo</code>（也可以是其他名字）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new post <span class="string">&quot;demo&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/82673fdbaa92462ca55792e0ddcece99.png" alt="请添加图片描述"><br>这时，在blog&#x2F;source&#x2F;_posts目录下就会多一个名为demo的.md文件，这就是我们刚刚创建的博客，在这个文件里，我们可以写自己的博客。<br><img src="https://img-blog.csdnimg.cn/b1da2d4aa4bc4c8ba34f2c184bce0244.png#pic_center" alt="在这里插入图片描述"><br>写完博客之后，保存，依次输入以下命令部署到 Github：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<p>这里要注意，以后我们每次更新博客，都要输入者三条命令<br><img src="https://img-blog.csdnimg.cn/63cecccfb6c74bfcae55e70dac4839d2.png" alt="请添加图片描述"><br>可以看到，新文章已经发布成功。如果没有看到也不要着急，Github会有一定延迟，等一会就好了。</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>对于butterfly主题的优化，可以看作者的文档<a href="https://butterfly.js.org/">https://butterfly.js.org/</a><br>当然，你也可以选择其他主题。</p>
<hr>
<p>如有问题，点击下方链接讨论：</p>
<p><a href="https://blog.csdn.net/weixin_45476502/article/details/124688553">https://blog.csdn.net/weixin_45476502&#x2F;article&#x2F;details&#x2F;124688553</a></p>
]]></content>
      <categories>
        <category>hexo教程</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>butterfly</tag>
      </tags>
  </entry>
  <entry>
    <title>p4环境配置</title>
    <url>/2022/05/08/p4%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>p4</strong> （官网链接：<a href="https://p4.org/">https://p4.org/</a>）是一种用于网络设备的领域特定语言，指定数据平面设备(交换机、网卡、路由器、过滤器等)如何处理包。</p>
<p>本文主要介绍一下 p4 这门编程语言的<strong>虚拟机环境配置</strong>，供小伙伴们参考。</p>
<span id="more"></span>

<p>下面介绍两种环境配置方法：</p>
<p><strong>第一种</strong>是p4官方教程里的方法（由于p4的环境配置复杂，所以官方直接给我们打包好了安装虚拟机的一系列文件，我们只需要按照步骤操作就好。不建议用这种方法，因为很难安装成功，但是在这里我还是要记录一下安装步骤，供大家参考）；</p>
<p><strong>第二种</strong>方法是直接导入已经配置好的虚拟镜像文件，一般为 .ova 或者 .ovf 文件，下文中有获取链接。</p>
<h1 id="建议直接看第二种方法"><a href="#建议直接看第二种方法" class="headerlink" title="建议直接看第二种方法"></a><a href="#jump">建议直接看第二种方法</a></h1><p><code>如果不想了解官网安装步骤的话可以直接看第二种方法</code></p>
<h1 id="第一种方法：p4官方教程里的方法（不建议，我没安装成功）"><a href="#第一种方法：p4官方教程里的方法（不建议，我没安装成功）" class="headerlink" title="第一种方法：p4官方教程里的方法（不建议，我没安装成功）"></a>第一种方法：p4官方教程里的方法（不建议，我没安装成功）</h1><p>打开 p4 的官方教程：<a href="https://github.com/p4lang/tutorials">https://github.com/p4lang/tutorials</a>，你会看到下面这个界面，这里面有p4语言的相关练习<code>exercises</code>、安装虚拟环境所必要的文件等。</p>
<p><img src="https://img-blog.csdnimg.cn/86a9f3b37cd14cd793ed534bd71d79cc.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>我们直接看下面的README.md，并且翻到下面这一部分：</p>
<p><img src="https://img-blog.csdnimg.cn/81ab163f397c434884294dff744bba25.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>按照红框里的步骤，逐一下载所需要的软件并执行相关操作：</p>
<h2 id="1-1-下载并安装-Virtual-Box"><a href="#1-1-下载并安装-Virtual-Box" class="headerlink" title="1.1 下载并安装 Virtual Box"></a>1.1 下载并安装 Virtual Box</h2><p>下载链接：<a href="https://www.virtualbox.org/wiki/Downloads">https://www.virtualbox.org/wiki/Downloads</a>，点击这个链接会看到下面的页面，由于我的电脑是Window系统，所以我选择<code>Windows hosts</code>，点击即可下载。其他系统的小伙伴可以自行搜索如何下载安装。<br><img src="https://img-blog.csdnimg.cn/8e3a357d08cf498eaec46d9128596a7a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>0、下载好了，双击安装：</p>
<p><img src="https://img-blog.csdnimg.cn/4b558162b73a4693845afeae94750f20.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>1、点击下一步<br><img src="https://img-blog.csdnimg.cn/a8123a04f30e4be9a0024c45dc26c37f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>2、点击浏览更改安装位置，尽量不要装在C盘（系统盘），这里我装在了 <code>D:\VirtualBox\ </code>目录下，点击下一步：<br><img src="https://img-blog.csdnimg.cn/d5d69dbdb2a94c9e9870c20c5bf7c9b6.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>3、点击下一步：<br><img src="https://img-blog.csdnimg.cn/d303315a54b04ccb9995c44c03a07818.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>4、点击 是<br><img src="https://img-blog.csdnimg.cn/c1589869b50c40a19e9866ae1777048e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>5、安装完成，点击完成并打开VirtualBox：<br><img src="https://img-blog.csdnimg.cn/fa8e01fbfc3a41f6a1afb5dd9bb8e277.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>6、打开 <strong>全局设定</strong>：</p>
<p><img src="https://img-blog.csdnimg.cn/9634b7c7eb374b31b479aba1c329f070.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>7、修改默认虚拟电脑位置，就是给我们后面安装的虚拟机设定一个安装目录，并且以后我们的虚拟机都会安装到这个目录下。<strong>确保这个目录有足够的存储空间</strong>，最好不要在C盘（系统盘），这里我放在了<code>D:\VirtualBos VMs</code>这个目录下，然后点击 OK：</p>
<p><img src="https://img-blog.csdnimg.cn/550cbe5f8149476b9db8ae0aa3cd8f5d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>8、然后关闭VirtualBox，我们安装VirtualBox的工作就结束啦！！<br><img src="https://img-blog.csdnimg.cn/282d70490f5f45df9fd72c1086dab806.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<h2 id="1-2-下载并安装-Vagrant"><a href="#1-2-下载并安装-Vagrant" class="headerlink" title="1.2 下载并安装 Vagrant"></a>1.2 下载并安装 Vagrant</h2><p>下载链接：<a href="https://www.vagrantup.com/downloads">https://www.vagrantup.com/downloads</a><br>根据系统类型选择要下载的文件，我是win10 x86 64位的，所以选择了 <code>Amd64</code>，不过我试了另外一个<code>686</code>的，好像效果是一样的，不太清楚他们两个的区别是什么，反正随便下载一个就好啦<br><img src="https://img-blog.csdnimg.cn/fa6b782f2dbb487c94a0e160b35975db.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>0、下载好了，双击安装<br><img src="https://img-blog.csdnimg.cn/c8904718946c468e9b291402bef5f4fa.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>1、点击Next</p>
<p><img src="https://img-blog.csdnimg.cn/ce134f379dd74a42804326c769ce52c0.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>2、接受，Next<br><img src="https://img-blog.csdnimg.cn/003f626dc7dc4629b4807e4395379f73.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>3、更改安装文件夹，最好不要在C盘，Next</p>
<p><img src="https://img-blog.csdnimg.cn/59c86bc5fa7746f1a246f1ba466b7ea6.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>4、点击Install<br><img src="https://img-blog.csdnimg.cn/2a8e4692a0c04aa7a4e6ee5fe621f5ca.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>5、等待一会就安装好了<br><img src="https://img-blog.csdnimg.cn/66a0513005e8404d89fc24a1b8d59258.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>6、安装好了，Finish<br><img src="https://img-blog.csdnimg.cn/6875f9c85ebb4b9b886ab06fa93c6367.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>7、之后会弹出下面这个窗口，点击Yes重启计算机或者自己手动重启计算机<br><img src="https://img-blog.csdnimg.cn/08982d5998614df6a8ef3ce50928d09d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_15,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>Vagrant 是没有图形界面的，所以安装完成后也没有桌面快捷方式。开机之后，打开终端，输入<code>vagrant version</code>，这样可以判断是否安装成功</p>
<p><img src="https://img-blog.csdnimg.cn/f1655b3fb76c4c90a888ce83f687a973.png#pic_center" alt="在这里插入图片描述"></p>
<p>8、通过 Vagrant 创建虚机需要先导入镜像文件，它们默认存储的位置在用户目录下的 <code>.vagrant.d</code> 目录下，对于 Windows 系统来说，就是 <code>C:\Users\用户名\.vagrant.d</code>。</p>
<p>如果后续可能会用到较多镜像，或者你的 C 盘空间比较紧缺，可以通过设置环境变量VAGRANT_HOME 来设置该目录。</p>
<p>打开系统设置，点击关于，然后点击右侧地高级系统设置<br><img src="https://img-blog.csdnimg.cn/0557f7c9708a48c88e2127e9febe5439.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>点击环境变量<br><img src="https://img-blog.csdnimg.cn/c9478883ce2e4d5f8743cb39fe32eb51.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>新建系统变量</p>
<p><img src="https://img-blog.csdnimg.cn/f456404afa08433eb447f54ee0abedf3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>在 Windows 系统中，可以这样操作：新建系统环境变量，环境变量名为 <code>VAGRANT_HOME</code>，变量值为 <code>D:\VirtualBos VMs\.vagrant.d</code> ，最后这个<code>.vagrant.d</code> 目录名称不是必须的，但是建议保持一致，这样一眼看上去就能知道这个目录是做什么用处的了。<strong>（可以注意到，这里的路径和刚刚我们安装Virtual Box时在全局设定中设置的虚拟机存放位置是一样的，这样做可以让我们以后更方便地管理自己的虚拟机）</strong><br><img src="https://img-blog.csdnimg.cn/a02a9f25da5a4ef7ae68bcfc4e647887.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>然后一路确定就好了，为了保险起见，最好再重启一下计算机。</p>
<p>到这里，Vagrant 就安装好了。</p>
<h2 id="1-3-利用-Vagrant-安装虚拟机"><a href="#1-3-利用-Vagrant-安装虚拟机" class="headerlink" title="1.3  利用 Vagrant 安装虚拟机"></a>1.3  利用 Vagrant 安装虚拟机</h2><p>首先我们要去官网下载一下相关文件：<a href="https://github.com/p4lang/tutorials">https://github.com/p4lang/tutorials</a></p>
<p><img src="https://img-blog.csdnimg.cn/b067aae8e9154223bf8b4529c7a177eb.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/56ab54e2f0124d3b8926409144de2e35.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>下载好之后解压，进入下面这个文件夹</p>
<p><img src="https://img-blog.csdnimg.cn/1713bb04ce5843e498ee31b23d661f5f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>输入 cmd ，回车进入终端：</p>
<p><img src="https://img-blog.csdnimg.cn/cb3b70ea4c864f1982b44ad8dc92ffc4.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>如下：<br><img src="https://img-blog.csdnimg.cn/d37c71b3b5c841ed8a705c528146409f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p><strong>以上步骤相信大家都能顺利完成</strong></p>
<p><strong>接下来的步骤要保证有非常稳定的网络环境</strong><br>在终端输入 <code>vagrant up</code> ，接下来就是漫长的等待过程，在此期间，Virtual Box会被唤醒并自动新建一个虚拟机，如果过顺利的话，按照官方说法，大概一两个小时之后，我们虚拟机就会完全安装完成，这个虚拟机里有我们运行p4语言所需要的所有环境。当然，这只是理论情况。<br><img src="https://img-blog.csdnimg.cn/33624c62285d429ab22ed80c5c158ce9.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<hr>
<p>然而遗憾的是，我并没有在安装过程中顺利下载所有资源，从而导致虚拟机安装失败。当初我以为是网络不稳定，但是换了几个不同的网络之后，还是不行，这时我已经安装了3次了，每次<code>vagrant up</code> 之后都要等将近两个小时才能出结果，每次都是在下面这个界面卡一个多小时，然后报一大堆获取资源出错的错误，可想而知内心很崩溃。<br><img src="https://img-blog.csdnimg.cn/fabfa4d531e142a090403d347daca8fa.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/5da4c34b96734943aabf59eec279c70e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>最后仔细分析了报错的原因，发现有些资源的获取链接不是国内的，所以要FQ才能下载这些资源，事实证明也确实是这个原因，但是由于FQ后网络不稳定，试了几次还是没有成功，最后果断放弃。</p>
<p>如果有大佬安装成功了，希望可以克隆一份放在评论区，蟹蟹！！！</p>
<p><span id="jump"></span></p>
<h1 id="第二种方法：直接导入已经配置好的虚拟镜像文件"><a href="#第二种方法：直接导入已经配置好的虚拟镜像文件" class="headerlink" title="第二种方法：直接导入已经配置好的虚拟镜像文件"></a>第二种方法：直接导入已经配置好的虚拟镜像文件</h1><p>由于用第一种方法没有安装成功，我就在网上搜索有没有已经安装好的镜像文件，这样就可以用Virtual Box直接导入使用了。</p>
<p>最后在一位大佬的学习笔记中发现了一个配置好的镜像文件（链接：<a href="https://www.zhihu.com/people/yaoj-x/posts">https://www.zhihu.com/people/yaoj-x/posts</a>），他的这篇文章中给的链接时谷歌云盘，我下了好长时间才下载成功，下面是网盘链接，方便大家自取：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">链接：https://pan.baidu.com/s/10JgFwffsPCyw6g7TVp8Asg </span><br><span class="line">提取码：2de6 </span><br><span class="line">--来自百度网盘超级会员V4的分享</span><br></pre></td></tr></table></figure>



<p>另外，这位大佬的笔记也是非常好，非常适合入门p4，推荐大家去看一下。</p>
<p>接下来介绍具体的安装步骤。</p>
<h2 id="2-1-下载并安装-Virtual-Box"><a href="#2-1-下载并安装-Virtual-Box" class="headerlink" title="2.1 下载并安装 Virtual Box"></a>2.1 下载并安装 Virtual Box</h2><p>这里和 1.1 中的步骤是一样的，就不再重复写了。</p>
<h2 id="2-2-导入镜像文件"><a href="#2-2-导入镜像文件" class="headerlink" title="2.2 导入镜像文件"></a>2.2 导入镜像文件</h2><p>下载好上面网盘里的文件</p>
<p><img src="https://img-blog.csdnimg.cn/71bda76890b54df3896952e2456f765e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>打开Virtual Box，点击导入虚拟机<br><img src="https://img-blog.csdnimg.cn/0a21957dcd9c4f52a74be2b15e9628d1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>选择我们刚刚下载好的<code>p4-learning.ova</code>文件<br><img src="https://img-blog.csdnimg.cn/fccd54908f754057b7fb67ed35825799.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/164f2cfa16934628ad742b96c2f0da66.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/0942ee12398d4c8b80fc211c26fde5da.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>点击导入</p>
<p><img src="https://img-blog.csdnimg.cn/8377bbfb0e464d7199a6bc2fcf9401c8.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>大概十几分钟就能完成</p>
<p><img src="https://img-blog.csdnimg.cn/35677fa04f5d44f5aa53734bc7649495.png#pic_center" alt="在这里插入图片描述"><br>安装好了，点击启动（需要等待几分钟）<br><img src="https://img-blog.csdnimg.cn/9e191dd8831a4441871734ade01135b2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>启动之后大概是这个样子<br><img src="https://img-blog.csdnimg.cn/9cb6188a4fa041ff9d58e9071bb4f03e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>打开终端，输入<code>git clone https://github.com/p4lang/tutorials</code>，下载我们想要的p4教程<br><img src="https://img-blog.csdnimg.cn/e39550913b874423970c4b3f89c712b3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/e425b0e6c9304bb7b70a5f539c7512aa.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/dbb319abca9f40758bb890ebc1e6971d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>这时我们的主文件夹里会出现一个<code>tutorial</code>目录</p>
<p><img src="https://img-blog.csdnimg.cn/2d9666fc9a0d4d51b628b9b1ef462d89.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br><code>tutorial</code>目录里的<code>exercises</code>目录就是我们想要的p4练习</p>
<p><img src="https://img-blog.csdnimg.cn/6116d0dfafc54d47a480db8991d01e29.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>接下来就可以愉快地学习p4啦！！！</p>
<p>唯一遗憾的是，官方给的最新版是Ubuntu 20，而这个是Ubuntu 16，不过没关系啦，对于学习p4来说已经够用了。</p>
<hr>
<h2 id="2-3-（记录）其他镜像文件1"><a href="#2-3-（记录）其他镜像文件1" class="headerlink" title="2.3 （记录）其他镜像文件1"></a>2.3 （记录）其他镜像文件1</h2><p>与此同时，从一位学长那里也要到了一份镜像文件，导入之后发现同样是Ununtu 16版本的，和2.2中的一样，只是文件格式和2.2中的不一样，就不再分享资源了。下面主要记录一下安装过程。</p>
<p>安装好Virtual Box（安装步骤见1.1）之后，就可以导入文件了，学长给的是一个压缩包，解压之后，如下：<br><img src="https://img-blog.csdnimg.cn/ca006905e63f4daea38ddee31de9df9e.png#pic_center" alt="在这里插入图片描述"><br>打开Virtual Box，点击导入<br><img src="https://img-blog.csdnimg.cn/e15070c92c7149c3805ae07c5535a07e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/b25c9d00d7a64a06a0c2850dae3fb3a0.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>选择刚刚文件夹中的这个文件：<br><img src="https://img-blog.csdnimg.cn/ed290ea70358492dba70d0c6210dc001.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/a4e56d9728184accb12bdb7720466312.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/c3bc2723e27f4c58a5b3a55d76df8f63.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/ce58897b1b64437d95d21ef75669b63f.png#pic_center" alt="在这里插入图片描述"><br>大概十几分钟就安装好了，然后启动虚拟机（启动虚拟机也需要几分钟时间），打开之后是这个样子的：</p>
<p><img src="https://img-blog.csdnimg.cn/e421c4fd0cf34f079c899a33ea4505ed.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/832993d55b2241a9a43831c74147f9e5.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>可以看到，主目录下有一个tutorials文件夹，也就是官方的教程，据学长说这个他已经做过了，所以我们要再下载一份新的没做过的。打开终端，输入如下命令：<code>git clone https://github.com/p4lang/tutorials</code></p>
<p>然后就会报错，大概意思就是这个目录已经存在，所以我们要把之前的<code>tutorials</code>目录删除或者重命名，这里我重命名为<code>tutorials00</code><br><img src="https://img-blog.csdnimg.cn/2f6c643f6846483aacf0f677ffe11ee6.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/79a864470a824ea48d72af6f0779a2df.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/0c64a12b6c14467bbcbaf4b0e6cf96bc.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>再次输入<code>git clone https://github.com/p4lang/tutorials</code></p>
<p><img src="https://img-blog.csdnimg.cn/a4e3a06e6b0146ba98e58b52a3b43d20.png#pic_center" alt="在这里插入图片描述"></p>
<p>这样就下载好了，这个新的<code>tutorials</code>文件夹内有我们想要的练习题</p>
<p><img src="https://img-blog.csdnimg.cn/8dcafe41a8964ff2bdb00c6245dad156.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/544ebf8668fa496ba2953d88a9bc7897.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2F5cmFtXzA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<h2 id="2-4-（记录）其他镜像文件2"><a href="#2-4-（记录）其他镜像文件2" class="headerlink" title="2.4 （记录）其他镜像文件2"></a>2.4 （记录）其他镜像文件2</h2><p><a href="https://www.cnblogs.com/gejuncheng/p/16178961.html">https://www.cnblogs.com/gejuncheng/p/16178961.html</a><br>Virtual Box 和 Vagrant的安装与下载可以参考 1.1 和 1.2</p>
<hr>
<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p><a href="https://p4.org/learn/">https://p4.org/learn/</a><br><a href="https://blog.csdn.net/class_c/article/details/120623743">https://blog.csdn.net/class_c/article/details/120623743</a><br><a href="https://www.zhihu.com/people/yaoj-x/posts">https://www.zhihu.com/people/yaoj-x/posts</a><br><a href="https://zhuanlan.zhihu.com/p/259833884">https://zhuanlan.zhihu.com/p/259833884</a><br><a href="https://github.com/p4lang/tutorials">https://github.com/p4lang/tutorials</a></p>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>p4</tag>
      </tags>
  </entry>
  <entry>
    <title>python opencv读取灰度图并用matplotlib显示灰度图的正确做法</title>
    <url>/2022/05/08/python%20opencv%E8%AF%BB%E5%8F%96%E7%81%B0%E5%BA%A6%E5%9B%BE%E5%B9%B6%E7%94%A8matplotlib%E6%98%BE%E7%A4%BA%E7%81%B0%E5%BA%A6%E5%9B%BE%E7%9A%84%E6%AD%A3%E7%A1%AE%E5%81%9A%E6%B3%95/</url>
    <content><![CDATA[<p>最近在学图像处理，遇到了这样一个问题，如何用matplotlib 正确显示opencv读取的灰度图？</p>
<span id="more"></span>

<p>如果我们用python opencv读取图片并转换成灰度图，再把它显示出来，我们可以很容易的利用下面这段代码实现：</p>
<p>以这幅图片为例：</p>
<center>
<img src="https://img-blog.csdnimg.cn/20201015151031545.png?watmark/2/text/aHR0cDovL2cuY3Nkbi5uZXQvV5bm1hbjIzMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="40%">
</center>




<p>代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">Description: </span></span><br><span class="line"><span class="string">Author: Weijian Ma</span></span><br><span class="line"><span class="string">Date: 2020-10-13 15:50:15</span></span><br><span class="line"><span class="string">LastEditTime: 2020-10-15 15:13:52</span></span><br><span class="line"><span class="string">LastEditors: Weijian Ma</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line"><span class="comment">## 读取图片并转换成灰度图</span></span><br><span class="line">img = cv2.imread(<span class="string">&quot;img01.png&quot;</span>,<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">##显示图片</span></span><br><span class="line">cv2.imshow(<span class="string">&quot;img&quot;</span>,img)</span><br><span class="line">cv2.waitKey()</span><br></pre></td></tr></table></figure>

<p>结果：</p>
<center>
<img src="https://img-blog.csdnimg.cn/20201015151548278.png?watmark/2/text/aHR0cDovL2cuY3Nkbi5uZXQvV5bm1hbjIzMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="40%">
</center>


<p>然而，在很多情况下，为了便于观察，我们需要在一个窗口中显示多张图像，比如下面这张图片，在一个窗口中显示一张图像和它的直方图，这就需要我们用到python的第三方库matplotlib了。</p>
<center>
<img src="https://img-blog.csdnimg.cn/20201015152148772.png?watmark/2/text/aHR0cDovL2cuY3Nkbi5uZXQvV5bm1hbjIzMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="80%"></center>



<p>那么我们应当如何<strong>利用matplotlib显示灰度图</strong>呢？<br>搜索很多大佬们的解决办法，发现他们都是用下面的代码实现的:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">Description: </span></span><br><span class="line"><span class="string">Author: Weijian Ma</span></span><br><span class="line"><span class="string">Date: 2020-10-13 15:50:15</span></span><br><span class="line"><span class="string">LastEditTime: 2020-10-15 15:26:49</span></span><br><span class="line"><span class="string">LastEditors: Weijian Ma</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line"><span class="comment">## 读取图片并转换成灰度图</span></span><br><span class="line">img = cv2.imread(<span class="string">&quot;img01.png&quot;</span>,<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">##显示图片</span></span><br><span class="line">plt.imshow(img,cmap=<span class="string">&quot;gray&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>

<p>在显示图片的时候，加上<code>camp=&quot;gray&quot;</code>。</p>
<p>结果：</p>
<center>
<img src="https://img-blog.csdnimg.cn/20201015152932418.png?watmark/2/text/aHR0cDovL2cuY3Nkbi5uZXQvV5bm1hbjIzMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="60%"></center>



<p>乍一看并没有什么问题，但是这并不是我们想要的那种256灰度级的灰度图，说到这里，你可能会不理解，下面的这个例子会告诉你一切真相：</p>
<p>比如，我们要显示一张256灰度级的灰度图，用矩阵可以表示为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">img = np.array([[<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">                [<span class="number">3</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>],</span><br><span class="line">                [<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>],</span><br><span class="line">                [<span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>],</span><br><span class="line">                [<span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>]])</span><br></pre></td></tr></table></figure>
<p>利用matplotlib，用上面的方法显示出来：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">Description: </span></span><br><span class="line"><span class="string">Author: Weijian Ma</span></span><br><span class="line"><span class="string">Date: 2020-10-13 10:09:21</span></span><br><span class="line"><span class="string">LastEditTime: 2020-10-15 15:36:34</span></span><br><span class="line"><span class="string">LastEditors: Weijian Ma</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>]=[<span class="string">&#x27;SimHei&#x27;</span>]   <span class="comment"># 用黑体显示中文</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>]=<span class="literal">False</span>     <span class="comment"># 正常显示负号</span></span><br><span class="line"></span><br><span class="line">img = np.array([[<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">                [<span class="number">3</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>],</span><br><span class="line">                [<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>],</span><br><span class="line">                [<span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>],</span><br><span class="line">                [<span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>]])</span><br><span class="line"></span><br><span class="line">plt.imshow(img,cmap=<span class="string">&quot;gray&quot;</span>)</span><br><span class="line">plt.colorbar()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>

<center>
<img src="https://img-blog.csdnimg.cn/202010151536226.png?watmark/2/text/aHR0cDovL2cuY3Nkbi5uZXQvV5bm1hbjIzMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="40%"></center>



<p>很显然，这里灰度级为4的像素是白色，并不是我们想要的结果，而且，在很多情况下，我们会发现，利用这种方法显示灰度图会和利用opencv显示灰度图有些许差别，特别是一些较暗的图像，如果我们用matplotlib的<code>plt.imshow(img,cmap=&quot;gray&quot;)</code>显示图像，会和真实的灰度图有明差别。</p>
<p>原始图像：</p>
<center>
<img src="https://img-blog.csdnimg.cn/20201015183730895.png?watmark/2/text/aHR0cDovL2cuY3Nkbi5uZXQvV5bm1hbjIzMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="40%"></center>



<p>运行以下代码，分别用opencv的 <code>cv2.imshow(&quot;img&quot;, img)</code>和 matplotlib的 <code>plt.imshow(img, cmap=&quot;gray&quot;)</code>显示灰度图。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">Description: </span></span><br><span class="line"><span class="string">Author: Weijian Ma</span></span><br><span class="line"><span class="string">Date: 2020-10-13 15:50:15</span></span><br><span class="line"><span class="string">LastEditTime: 2020-10-15 18:40:30</span></span><br><span class="line"><span class="string">LastEditors: Weijian Ma</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line"><span class="comment">## 读取图片并转换成灰度图</span></span><br><span class="line">img = cv2.imread(<span class="string">&quot;result.png&quot;</span>,<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 用opencv显示图片</span></span><br><span class="line">cv2.imshow(<span class="string">&quot;img&quot;</span>, img)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 用matplotlib显示图片</span></span><br><span class="line">plt.imshow(img, cmap=<span class="string">&quot;gray&quot;</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br><span class="line">cv2.waitKey()</span><br></pre></td></tr></table></figure>

<p>结果：<br>opencv的 <code>cv2.imshow(&quot;img&quot;, img)</code>显示：</p>
<center>
<img src="https://img-blog.csdnimg.cn/20201015184137600.png?watmark/2/text/aHR0cDovL2cuY3Nkbi5uZXQvV5bm1hbjIzMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="40%"></center>



<p>matplotlib的 <code>plt.imshow(img, cmap=&quot;gray&quot;)</code>显示：</p>
<center>
<img src="https://img-blog.csdnimg.cn/20201015184211640.png?watmark/2/text/aHR0cDovL2cuY3Nkbi5uZXQvV5bm1hbjIzMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="50%">


<p>可以发现，上面两张图片有明显的差别，而第一张才是我们想要的灰度图。</p>
<p>那么，应该如何解决这个问题呢？</p>
<p>通过查阅matplotlib的官方文档发现，<code>plt.imshow()</code>不能直接显示单通道的灰度图，而<code>cv2.imread(&quot;result.png&quot;,0)</code>所读取的灰度图是单通道的灰度图，正确显示灰度图的方法是显示三通道的灰度图，所以，如果我们想要正确显示上面的灰度图，要先把<code>cv2.imread(&quot;result.png&quot;,0)</code>读到的单通道的灰度图转换成三通道的灰度图，然后再用<code>plt.imshow()</code>显示出来。</p>
<p>代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">Description: </span></span><br><span class="line"><span class="string">Author: Weijian Ma</span></span><br><span class="line"><span class="string">Date: 2020-10-13 15:50:15</span></span><br><span class="line"><span class="string">LastEditTime: 2020-10-15 18:51:36</span></span><br><span class="line"><span class="string">LastEditors: Weijian Ma</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line"><span class="comment">## 读取图片并转换成灰度图</span></span><br><span class="line">img = cv2.imread(<span class="string">&quot;result.png&quot;</span>,<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 把单通道的灰度图转换成三通道的灰度图</span></span><br><span class="line">imgOfThree = np.concatenate((np.expand_dims(img, axis=<span class="number">2</span>), np.expand_dims(img, axis=<span class="number">2</span>), np.expand_dims(img, axis=<span class="number">2</span>)), axis=-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 用matplotlib显示图片</span></span><br><span class="line">plt.imshow(imgOfThree)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>



<p>结果：</p>
<center>
<img src="https://img-blog.csdnimg.cn/20201015185248520.png?watmark/2/text/aHR0cDovL2cuY3Nkbi5uZXQvV5bm1hbjIzMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="60%"></center>



]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>图像处理</tag>
      </tags>
  </entry>
</search>
